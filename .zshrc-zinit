## History
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=10000
setopt beep
setopt inc_append_history
setopt share_history
autoload colors && colors

### Load Zinit
if [[ ! -f $HOME/.zinit/bin/zinit.zsh ]]; then
    print -P "%F{33}▓▒░ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma/zinit%F{220})…%f"
    command mkdir -p "$HOME/.zinit" && command chmod g-rwX "$HOME/.zinit"
    command git clone https://github.com/zdharma/zinit "$HOME/.zinit/bin" && \
        print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
        print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi

source "$HOME/.zinit/bin/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# patch-dl: Download and apply patches. ice: `dl` `patch`
# as-monitor: Auto-download of last version. ice: `as"monitor"`
# bin-gem-node: Executable not on PATH. `fbin` ice
zinit light-mode for \
    zinit-zsh/z-a-patch-dl \
    zinit-zsh/z-a-as-monitor \
    zinit-zsh/z-a-bin-gem-node

## Modules
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=1"
zinit ice id-as="autosuggestions"; zinit light zsh-users/zsh-autosuggestions

# Completions
# ice block: avoid adding completions so they are run at the end by zinit
zinit ice block id-as="zsh-completions"; zinit light zsh-users/zsh-completions
zinit snippet PZT::modules/completion

zinit wait lucid light-mode depth=1 for \
  pick="autopair.zsh" atload="autopair-init" hlissner/zsh-autopair \
  pick="async.zsh" mafredri/zsh-async

# Fuzzy Finder package (from Zsh-Packages/fzf)
zinit pack multisrc="shell/*.zsh" depth=1 for fzf

# Tarball with the bin-gem-node annex-utilizing ice list
zinit pack"bgn" depth=1 for pyenv

# Fasd
zinit ice lucid as="command" pick="$ZPFX/bin/fasd" make="!PREFIX=$ZPFX install" \
  atclone="mkdir -p $ZPFX/bin; cp -vf fasd $ZPFX/bin" atpull="%atclone" depth=1 \
  atload='eval "$(fasd --init auto)"'
zinit light clvv/fasd

# History search
zinit light zdharma/history-search-multi-word

## Theme
# Font
zinit ice id-as"meslo" from"gh-r" as"null" bpick"Meslo.zip" extract depth=1 \
  atclone="rm -f *Windows*; mv -f *.ttf $HOME/Library/Fonts/" atpull"%atclone"
zinit light ryanoasis/nerd-fonts

zinit ice depth=1; zinit load romkatv/powerlevel10k
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# Syntax highlight must be the last one
zinit ice id-as="fast-highlight" depth=1
zinit light zdharma/fast-syntax-highlighting

autoload -Uz compinit
compinit

# Replay compdefs to be done after compinit
zinit cdreplay -q

### End Load Zinit

## Global ENV
declare -g DOTFILES_HOME=${DOTFILES_HOME:-"$HOME/dotfiles"}
export SHELL='/bin/zsh'

## Keybindings
if [[ -f "$DOTFILES_HOME/keybindings.zsh" ]]; then
  source "$DOTFILES_HOME/keybindings.zsh"
fi

## Aliases and functions
if [[ -f "$DOTFILES_HOME/aliases.zsh" ]]; then
  source "$DOTFILES_HOME/aliases.zsh"
fi

## Rbenv configuration
export PATH="$HOME/.rbenv/bin:$PATH"
eval "$(rbenv init -)"

## Nodenv configuration
export PATH="$HOME/.nodenv/bin:$PATH"
eval "$(nodenv init -)"

## Jenv configuration
export PATH="$HOME/.jenv/bin:$PATH"
eval "$(jenv init -)"

## Java version
export JAVA_OPTIONS="-Xmx2048m"
export JAVA_OPTS="-Xmx2048m"


export FZF_DEFAULT_OPTS="--no-mouse"